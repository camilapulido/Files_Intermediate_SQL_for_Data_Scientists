---- CH4 NOTEBOOK
----- USE THE HAVING CLAUSE TO FIND SUBGROUPS -----
SELECT 
	CD.DEPARTMENT_NAME,COUNT(*) AS NO_EMPLOYEES
FROM DATA_SCI.EMPLOYEES E
JOIN DATA_SCI.COMPANY_DEPARTMENTS CD
	ON E.DEPARTMENT_ID= CD.ID
GROUP BY
	CD.DEPARTMENT_NAME
HAVING
	COUNT(*) >50
ORDER BY
	CD.DEPARTMENT_NAME

	---- SUBQUERIES FOR COLUMN VALUES ----- 
SELECT 
	E1.LAST_NAME,
	E1.SALARY,
	E1.DEPARTMENT_ID,
	(SELECT ROUND(AVG(E2.SALARY),2) FROM DATA_SCI.EMPLOYEES E2 WHERE E1.DEPARTMENT_ID=E2.DEPARTMENT_ID)
FROM 
	DATA_SCI.EMPLOYEES E1
	
---- SUBQUERIES IN FROM CLAUSES
SELECT
	ROUND(AVG(SALARY),2)
FROM 
	(SELECT * FROM DATA_SCI.EMPLOYEES WHERE SALARY > 100000) E1  ---- SOMETIMES IS MORE REDABLE


-------- SUBQUIERIES IN WHERE CLAUSES
SELECT 
	DEPARTMENT_ID
FROM
	DATA_SCI.EMPLOYEES E1
WHERE 
	(SELECT MAX(SALARY) FROM DATA_SCI.EMPLOYEES E2) = E1.SALARY  
--- WE NEED TO MAKE SURE THAT WE HAVE A BOOLEAN EXPRESSION
------ WE SELECT THE MAX SALARY FROM E1 AND THEN WE CHECKED TO SEE IF IT WAS EQUAL TO A SALARY IN THE PRIMARY QUERY 


------- USE ROLLUP TO CREATE SUBTOTALS -----
SELECT
	CR.COUNTRY_NAME,
	CR.REGION_NAME,
	COUNT(E.*)
FROM
	DATA_SCI.EMPLOYEES E
JOIN 
	DATA_SCI.COMPANY_REGIONS CR
ON
	E.REGION_ID = CR.ID
GROUP BY
	ROLLUP(CR.COUNTRY_NAME, CR.REGION_NAME) ---- INJECT AGGREGATES ACCORDING THE STRUCTURE OF THE HIERARCHY 
ORDER BY
	CR.COUNTRY_NAME, CR.REGION_NAME


----- USE CUBE TO TOTAL ACCROSS DIMENSIONS --> IS A GROUP BY OPPERATOR THAT DO MORE GROUPING SIMULTANEUSLY 
SELECT 
	CR.COUNTRY_NAME,
	CR.REGION_NAME,
	CD.DEPARTMENT_NAME,
	COUNT(E.*)
FROM
	DATA_SCI.EMPLOYEES E
JOIN
	DATA_SCI.COMPANY_REGIONS CR
ON E.REGION_ID = CR.ID
JOIN
	DATA_SCI.COMPANY_DEPARTMENTS CD
ON
	E.DEPARTMENT_ID = CD.ID
GROUP BY
	CUBE(CR.COUNTRY_NAME,
		CR.REGION_NAME,
		CD.DEPARTMENT_NAME)
ORDER BY
	CR.COUNTRY_NAME,
	CR.REGION_NAME,
	CD.DEPARTMENT_NAME

----- USE TOP-N QUERIES TO FIND TOP RESULTS
SELECT
	*
FROM
	DATA_SCI.EMPLOYEES
ORDER BY 
	SALARY DESC
LIMIT 10

	-- OR --- 
SELECT
	*
FROM
	DATA_SCI.EMPLOYEES
ORDER BY 
	SALARY DESC
FETCH FIRST 10 ROWS ONLY  --- FOR STANDARD SQL


------ CHALLENGE----
SELECT
	DEPARTMENT_ID,
	COUNT(*) AS NO_EMPLOYEES
FROM
	DATA_SCI.EMPLOYEES
GROUP BY 
	DEPARTMENT_ID
HAVING
	SUM(SALARY) > 5000000
ORDER BY SUM(SALARY) DESC




